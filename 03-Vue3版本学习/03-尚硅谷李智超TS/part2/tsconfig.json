{
    // 里面什么都不写，只要有这个文件也能用
    // 这个json文件是可以写注释的，而有些它是不可以写注释的
    // tsconfig.json是ts编译器的配置文件，ts编译器可以根据它的信息来对代码进行编译

    // 它里面的配置选项挺多的

    // 1.include:用来指定哪些TS文件需要被编译
    "include":[
        "./src/**/*"
        // 1个*表示一个文件，2个*表示一个目录
        // 这个就表示根目录下的src目录下的任意目录下的任意文件都会被编译
    ],

    // 2.exclude:不需要被编译的文件目录
    // 他有默认值：["node_modules", "bower_components", "jspm_packages"]
    "exclude": [
        "./src/hello/**/*"
        // 这个表示hello下面的文件不需要编译
    ],

    //compilerOptions：编译器的选项
    "compilerOptions": {
        // target用来指定ts被编译为的版本
        // "target":"ES3"
        "target":"ES6",
        // 'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'esnext'
        // "target":"abc"

        // 编译成的js最终要使用哪种模块化的解决方案
        // module：指定要使用的模块化规范
        // "module": "es2015",
        "module": "AMD",
        // 推荐用es2016这个版本，也就是ES6
        // "module": "CommonJS"
        // 'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'esnext'
        // "module": "CommonJDDS"

        // lib:用来指定项目中要使用的库
        "lib":["es6","dom"],
        // 什么也不写则表示我什么库都没用
        // 正常情况下这个不用动

        // outDir:用来指定编译后文件所在的目录
        "outDir": "./dist",

        //outFile：将代码合并为一个文件
        // 设置outFile后，所有全局作用域中的代码会合并到同一个文件中
        // "outFile": "./dist/app.js"

        // 是否对js文件进行编译，默认是false
        "allowJs":true,

        // 是否检查js代码是否符合语法规范
        "checkJs":false,

        // 是否移除注释
        "removeComments":true,

        //不生成编译后的文件
        "noEmit":false,

        
        // 当有错误时不生成编译后的文件
        "noEmitOnError":true,
        
        // 所有严格检查的总开关
        "strict":true,
        
        // 执行严格模式 
        "alwaysStrict":false,
        
        // 不允许隐式的any类型
        "noImplicitAny":true,

        // 不允许隐式的this
        "noImplicitThis":true,

        // 严格的检查空值
        "strictNullChecks":true
    }
}